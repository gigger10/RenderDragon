name: Patch Minecraft with mtbinloader2

on:
  workflow_dispatch:
    inputs:
      mcversion_path:
        description: "Path to mcversion.txt"
        default: "mcversion.txt"
        required: true
        type: string
      package_name:
        description: "Optional package name override (e.g., com.example.mcpatched)"
        required: false
        type: string

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      url32: ${{ steps.parse.outputs.url32 }}
      url64: ${{ steps.parse.outputs.url64 }}
      do32: ${{ steps.parse.outputs.do32 }}
      do64: ${{ steps.parse.outputs.do64 }}
      package_name: ${{ steps.pkgn.outputs.package_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Parse mcversion.txt
        id: parse
        shell: bash
        run: |
          set -euo pipefail
          FILE="${{ inputs.mcversion_path }}"
          if [[ ! -f "$FILE" ]]; then
            echo "mcversion.txt not found at: $FILE" >&2
            exit 1
          fi
          url32=""
          url64=""
          while IFS= read -r line; do
            line="$(echo "$line" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')"
            [[ -z "$line" ]] && continue
            if echo "$line" | grep -qiE '^32[[:space:]]*:'; then
              url32="$(echo "$line" | cut -d: -f2- | xargs)"
            elif echo "$line" | grep -qiE '^64[[:space:]]*:'; then
              url64="$(echo "$line" | cut -d: -f2- | xargs)"
            fi
          done < "$FILE"
          echo "url32=$url32" >> "$GITHUB_OUTPUT"
          echo "url64=$url64" >> "$GITHUB_OUTPUT"
          echo "do32=$([[ -n "$url32" ]] && echo true || echo false)" >> "$GITHUB_OUTPUT"
          echo "do64=$([[ -n "$url64" ]] && echo true || echo false)" >> "$GITHUB_OUTPUT"

      - name: Normalize package name input
        id: pkgn
        run: |
          echo "package_name=${{ inputs.package_name }}" >> "$GITHUB_OUTPUT"

  patch:
    needs: prepare
    if: ${{ needs.prepare.outputs.do32 == 'true' || needs.prepare.outputs.do64 == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install tools
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y unzip zip curl xxd patchelf openjdk-17-jdk
          mkdir -p mtb
          curl -L "https://github.com/mcbegamerxx954/mtbinloader2/releases/download/v0.1.9-beta/libmtbinloader2_armv7-linux-androideabi.so" -o "mtb/libmtbinloader2_armv7-linux-androideabi.so"
          curl -L "https://github.com/patrickfav/uber-apk-signer/releases/download/v1.3.0/uber-apk-signer-1.3.0.jar" -o uber.jar
          curl -L "https://github.com/iBotPeaches/Apktool/releases/download/v2.12.0/apktool_2.12.0.jar" -o apktool.jar

      - name: Download APK
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p work/32
          cd work/32
          curl -L "${{ needs.prepare.outputs.url32 }}" -o input.apk

      - name: Unpack APK
        shell: bash
        run: |
          set -euo pipefail
          cd work/32
          mkdir -p apk
          unzip -q input.apk -d apk
          cp "apk/lib/armeabi-v7a/libminecraftpe.so" libminecraftpe.so

      - name: Patch libminecraftpe.so
        shell: bash
        run: |
          set -euo pipefail
          cd work/32
          patchelf --add-needed "mtb/libmtbinloader2_armv7-linux-androideabi.so" libminecraftpe.so
          install -m 0644 libminecraftpe.so "apk/lib/armeabi-v7a/libminecraftpe.so"
          install -m 0644 "../../mtb/libmtbinloader2_armv7-linux-androideabi.so" "apk/lib/armeabi-v7a/libmtbinloader2_armv7-linux-androideabi.so"

      - name: Rebuild unsigned APK
        shell: bash
        run: |
          set -euo pipefail
          cd work/32/apk
          zip -qr ../unsigned.apk .

      - name: Generate debug keystore
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$GITHUB_WORKSPACE/keystore"
          keytool -genkeypair -v \
            -keystore "$GITHUB_WORKSPACE/keystore/debug.jks" \
            -storepass android \
            -keypass android \
            -alias androiddebugkey \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -dname "CN=Android Debug,O=Android,C=US"

      - name: Sign APK with debug key
        shell: bash
        run: |
          set -euo pipefail
          cd work/32
          mkdir -p signed
          java -jar "$GITHUB_WORKSPACE/uber.jar" -a unsigned.apk \
            --ks "$GITHUB_WORKSPACE/keystore/debug.jks" \
            --ksAlias androiddebugkey \
            --ksPass android \
            --keyPass android \
            --allowResign \
            --out signed
          cd signed
          mv *.apk "minecraft-rd-1.21.100-32.apk"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: minecraft-rd-1.21.100-32
          path: work/32/signed/minecraft-rd-1.21.100-32.apk
